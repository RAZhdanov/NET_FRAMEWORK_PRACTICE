<!-- View
    View или представление определяет визуальный интерфейс, через который пользователь взаимодействует с приложением.
    Применительно к WPF представление - это код в XAML, так и привязанный к нему код C#,
однако в идеале, код C# не должен содержать какой-то логики, кроме разве что конструктора, который вызывает
метод InitializeComponent и выполняет начальную инициализацию окна.
    Вся же основная логика приложения выносится в компонент ViewModel
    Однако иногда в файле связанного кода все же может находиться некоторая логика,
которую трудно реализовать в рамках паттерна MVVM во ViewModel.
    Представление не обрабатывает события за редким исключением, а выполняет действия
в основном посредством команд.
    -->




    
<Window x:Class="Module20.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Module20"
        xmlns:local1="clr-namespace:Module20.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local2="clr-namespace:Module20.Converters"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <local2:InverseBoolConverter x:Key="InverseBoolConverter"></local2:InverseBoolConverter>
    </Window.Resources>
    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition> <!--Row0 Menu-->
            <RowDefinition Height="*"></RowDefinition>    <!--Row1 General Area-->
            <RowDefinition Height="Auto"></RowDefinition> <!--Row2 Auxiluary Area1-->
            <RowDefinition Height="Auto"></RowDefinition> <!--Row3 Slider Area-->
            <RowDefinition Height="Auto"></RowDefinition> <!--Row4 Area of number of buttons-->
        </Grid.RowDefinitions>
        
        <!--Begin of Menu part-->
        <Menu Name="Menu" Grid.Row="0">                                 <!--Row0-->
            <MenuItem Header="_File">
                <MenuItem Header="_Open File" Command="{Binding Path=OpenFileCommand}"/>
                <Separator />
                <MenuItem Header="Exit" Command="{Binding Path=ExitApplicationCommand}"/>
            </MenuItem>
            <MenuItem Header="_Actions">
                <MenuItem Header="_Play" Command="{Binding Path=PlayMediaCommand}"/>
                <MenuItem Header="P_ause" Command="{Binding Path=PauseMediaCommand}"/>
                <MenuItem Header="_Stop" Command="{Binding Path=StopMediaCommand}"/>
                <MenuItem Header="Loop mediafile" Command="{Binding Path=RepeatSoundTrackCommand}"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Roll forward up to...">
                    <MenuItem Header="5 sec"/>
                    <MenuItem Header="10 sec"/>
                    <MenuItem Header="15 sec"/>
                    <MenuItem Header="20 sec"/>
                    <MenuItem Header="25 sec"/>
                </MenuItem>
                <MenuItem Header="Roll backward up to...">
                    <MenuItem Header="5 sec"/>
                    <MenuItem Header="10 sec"/>
                    <MenuItem Header="15 sec"/>
                    <MenuItem Header="20 sec"/>
                    <MenuItem Header="25 sec"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Theme">
                <MenuItem Header="Balls"/>
            </MenuItem>
        </Menu>
        <!--End of Menu part-->
        
        <!--Begin of Cental area part-->
        <!-- { -->
        <Grid Name="GridRow1" Grid.Row="1" Background="Black">              <!--Row1-->
            <MediaElement Name="myMediaElement" 
                          Source="{Binding Path=FileSourceProperty}" 
                          LoadedBehavior="Manual" 
                          Volume="{Binding Path=CurrentVolumeOfMediaFile, UpdateSourceTrigger=PropertyChanged}"/>

        </Grid>
        <!-- } -->
        <!--End of Central area part-->
        
        <!--Begin of bottom1 part-->
        <Grid Name="GridRow2" Grid.Row="2" Height="80px" Background="#515151">       <!--Row2 Auxiluary Area1-->
            <!--таймер, бегущая строка названия файла, формат, количество kbps, количество khz-->
            
            <!--Define the number of columns-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>     <!--Column0 Current time / Overall time (HH:MM:SS)-->
                <ColumnDefinition Width="Auto"/>     <!--Column1 Number of file/Name of File/Format/kbps/khz-->
                <ColumnDefinition Width="*"/>     <!--Column2 Histogramm-->
            </Grid.ColumnDefinitions>


            <!--Column0 Current time / Overall time (HH:MM:SS)-->
            <Grid Grid.Column="0"  >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>  <!--Row0 Current time (HH:MM:SS)-->
                    <RowDefinition Height="*"/>  <!--Row1 Overall time (HH:MM:SS)-->
                </Grid.RowDefinitions>

                <!--Do something-->
                <TextBlock Name="CurrentTime" Grid.Row="0" Text="{Binding Path=CurrentTimeOfMediaFileProperty, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="24"></TextBlock>
                <TextBlock Name="OverallTime" Grid.Row="1" Text="{Binding Path=OverallTimeOfMediaFileProperty, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>

            </Grid>


            <!--Column1 Number of file/Name of File/Format/kbps/khz-->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>   <!--Row0 Number of file/Name of File-->
                    <RowDefinition Height="*"/>   <!--Row1 Format/kbps/khz-->
                </Grid.RowDefinitions>
                
                <Grid Grid.Row="0">   <!--Row0 Number of file/Name of File-->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>    <!--Column0 Number of file-->
                        <ColumnDefinition Width="Auto"/> <!--Column1 Name of File-->
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="5" Name="NumberOfPlayingFile" Grid.Column="0" Text="{Binding Path=NumberOfPlayingMediaFileProperty, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    <TextBlock Margin="5" Name="FileName" Grid.Column="1" Text="{Binding Path=PlayingFileNameWithItsExtentionProperty}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>   <!--Column0 Format-->
                        <ColumnDefinition Width="Auto"/>   <!--Column1 kbps-->
                        <ColumnDefinition Width="Auto"/>   <!--Column2 khz-->
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="5" Name="Format" Grid.Column="0" Text="{Binding Path=TypeOfPlayingMediaFileProperty, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    <TextBlock Margin="5" Name="Kbps" Grid.Column="1" Text="{Binding Path=BitRateOfPlayingMediaFileProperty, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    <TextBlock Margin="5" Name="khz" Grid.Column="2" Text="{Binding Path=FrequencyOfPlayingMediaFileProperty, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    
                </Grid>
                

            </Grid>
            
            

            <!--Column2 Histogramm-->
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>    <!--Row0 Histogramm-->
                    <RowDefinition Height="Auto"/>    <!--Row1 Format/kbps/khz-->
                </Grid.RowDefinitions>

                <Rectangle Grid.Row="0" Stretch="UniformToFill" Fill="Aqua">
                    
                </Rectangle>

                
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <ToggleButton Name="SwitcherForTypeOfSoundtrackPlaying" Content="Repeat soundtrack" Style="{StaticResource ToggleButtonStyle1}" IsChecked="{Binding Path=IsRepeatSoundTrackSwitchedOn, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </Grid>
            
        </Grid>
        <!--End of bottom1 part-->

        <Grid Name="GridRow3" Grid.Row="3" Background="#303030">           <!--Row3 Slider Area #303030-->
            <!--Define the number of columns-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>             <!--Column0 Soundtrack-->
                <ColumnDefinition Width="Auto"></ColumnDefinition>          <!--Column1 Sound controller-->
            </Grid.ColumnDefinitions>

            <Slider Name="timelineSlider" Grid.Column="0" Minimum="0" Maximum="1" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.0001"></Slider>

            
            <Grid Grid.Column="1">                <!--Column1 Sound controller-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>          <!--Column0 switch on/off sound button-->
                    <ColumnDefinition Width="Auto"></ColumnDefinition>          <!--Column1 Sound controller-->
                    <ColumnDefinition Width="Auto"></ColumnDefinition>          <!--Column2 Sound controller-->
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Height="15" Width="15" Template="{StaticResource SpecificButtonTemplate}" Command="{Binding Path=SwitchSoundCommand}" CommandParameter="{Binding ElementName=SwitchOnOrOffSoundButtonImage}">
                    <Image Name="SwitchOnOrOffSoundButtonImage">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
       
                                    <DataTrigger Binding="{Binding IsSoundSwitchedOn}" Value="False">
                                        <Setter Property="Source" Value="../Resources/Icons/1x/baseline_volume_off_black_18dp.png"/>
                                    </DataTrigger>


                                    <DataTrigger Binding="{Binding IsSoundSwitchedOn}" Value="True">
                                        <Setter Property="Source" Value="../Resources/Icons/1x/baseline_volume_up_black_18dp.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <!--<Image Source=""/>-->
                </Button>


                <Slider Grid.Column="2" Name="SoundController" MinWidth="100" Minimum="0" Maximum="1" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.001" Value="{Binding Path=CurrentVolumeOfMediaFile, UpdateSourceTrigger=PropertyChanged}"></Slider>
            </Grid>          <!--End of Column1 Sound controller-->
            
        </Grid>        <!-- End of Row3 Slider Area-->



        <!--Begin of bottom2 part-->
        <VirtualizingStackPanel Grid.Row="4" Height="40" Background="#303030" Orientation="Horizontal">
            <Button Width="40" Height="40" Template="{StaticResource SpecificButtonTemplate}" Command="{Binding Path=PlayPauseCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding ElementName=PlayOfPauseButtonImage}">
                <Image Name="PlayOfPauseButtonImage">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <!--IsPlaying = TRUE, значит медиафайл сейчас проигрывается, и нужно отобразить кнопочку PAUSE-->
                                <DataTrigger Binding="{Binding IsMediaFilePlayingProperty}" Value="True">
                                    <Setter Property="Source" Value="../Resources/Icons/2x/baseline_pause_circle_filled_black_18dp.png"/>
                                </DataTrigger>
                                
                                <!--IsPlaying = FALSE, значит мы поставили на паузу, и нужно отобразить кнопочку PLAY-->
                                <DataTrigger Binding="{Binding IsMediaFilePlayingProperty}" Value="False">
                                    <Setter Property="Source" Value="../Resources/Icons/2x/baseline_play_circle_filled_white_black_18dp.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>



            <Button Width="40" Height="40" Template="{StaticResource SpecificButtonTemplate}" Command="{Binding Path=StopCommand}">
                <Image Source="../Resources/Icons/2x/baseline_stop_black_18dp.png"/>
            </Button>
            <Button Width="40" Height="40" Template="{StaticResource SpecificButtonTemplate}" Command="{Binding Path=SkipPreviousFileCommand}">
                <Image Source="../Resources/Icons/2x/baseline_skip_previous_black_18dp.png"/>
            </Button>
            <Button Width="40" Height="40" Template="{StaticResource SpecificButtonTemplate}" Command="{Binding Path=SkipNextFileCommand}">
                <Image Source="../Resources/Icons/2x/baseline_skip_next_black_18dp.png"/>
            </Button>
            <Button Width="40" Height="40" Template="{StaticResource SpecificButtonTemplate}" Command="{Binding Path=OpenFileCommand}">
                <Image Source="../Resources/Icons/2x/baseline_folder_open_black_18dp.png"/>
            </Button>
        </VirtualizingStackPanel>
        <!--End of bottom2 part-->
        
        
    </Grid>
</Window>



<!--<MediaElement Name="myMediaElement" >
    <MediaElement.Triggers>
        <EventTrigger RoutedEvent="MediaElement.Loaded">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        --><!--The MediaTimeline has a RepeatBehavior="Forever" which makes the media play over and over indefinitely.--><!--
                        <MediaTimeline Source={Binding Path=FileSourceProperty} Storyboard.TargetName="myMediaElement" RepeatBehavior="Forever" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
    </MediaElement.Triggers>
</MediaElement>-->